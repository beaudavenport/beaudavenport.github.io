{"version":3,"sources":["webpack:///./src/templates/projects.js"],"names":["ProjectTemplate","data","markdownRemark","allFile","frontmatter","html","title","techStack","url","className","projectStyles","container","href","dangerouslySetInnerHTML","__html","edges","map","edge","fixed","node","childImageSharp","pageQuery"],"mappings":"6QAOe,SAASA,EAAT,GAAoC,IAATC,EAAQ,EAARA,KAChCC,EAA4BD,EAA5BC,eAAgBC,EAAYF,EAAZE,QAChBC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAEnBC,EACEF,EADFE,MAAOC,EACLH,EADKG,UAAWC,EAChBJ,EADgBI,IAEpB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAWC,IAAcC,WAC5B,wBAAIF,UAAWC,IAAcJ,OAAQA,GACrC,uBAAGG,UAAWC,IAAcJ,OAC1B,+CACC,IACAC,GAEH,uBAAGK,KAAMJ,GAAMA,GACf,yBAAKK,wBAAyB,CAAEC,OAAQT,KACvCF,EAAQY,MAAMC,KAAI,SAACC,GAAD,OACjB,kBAAC,IAAD,CAAKC,MAAOD,EAAKE,KAAKC,gBAAgBF,aASzC,IAAMG,EAAS","file":"component---src-templates-projects-js-7a1fecf00d0533be241c.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\nimport projectStyles from './project.module.css';\n\nexport default function ProjectTemplate({ data }) {\n  const { markdownRemark, allFile } = data;\n  const { frontmatter, html } = markdownRemark;\n  const {\n    title, techStack, url,\n  } = frontmatter;\n  return (\n    <Layout>\n      <div className={projectStyles.container}>\n        <h1 className={projectStyles.title}>{title}</h1>\n        <p className={projectStyles.title}>\n          <strong>Tech Stack:</strong>\n          {' '}\n          {techStack}\n        </p>\n        <a href={url}>{url}</a>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n        {allFile.edges.map((edge) => (\n          <Img fixed={edge.node.childImageSharp.fixed} />))}\n      </div>\n    </Layout>\n  );\n}\nProjectTemplate.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport const pageQuery = graphql`\n  query($path: String!, $imagesDir: String!) {\n    markdownRemark(fields: { slug: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        techStack\n        url\n      }\n      description: excerpt(pruneLength: 130)\n      fields {\n        slug\n      }\n    }\n    allFile(filter: {relativeDirectory: {eq: $imagesDir}}) {\n      edges {\n        node {\n          childImageSharp {\n            fixed(width: 150, height: 150, quality: 90) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}