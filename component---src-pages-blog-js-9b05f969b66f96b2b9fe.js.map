{"version":3,"sources":["webpack:///./src/pages/blogPage.module.css","webpack:///./src/pages/page.module.css","webpack:///./src/pages/blog.js"],"names":["module","exports","BlogThumbnailRow","node","to","fields","slug","className","blogPageStyles","linkContainer","thumbnailContainer","fixed","frontmatter","image","childImageSharp","textContainer","title","caption","tagline","date","publishDate","HeroBlogThumbnailRow","heroLinkContainer","heroTitle","heroCaption","heroThumbnailContainer","heroImage","BlogPage","first3Nodes","data","allMarkdownRemark","edges","map","edge","pageStyles","breadcrumbs"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,cAAgB,yCAAyC,mBAAqB,8CAA8C,cAAgB,yCAAyC,uBAAyB,mDAAmD,kBAAoB,8CAA8C,UAAY,oCAAoC,YAAc,sCAAsC,kBAAoB,8CAA8C,MAAQ,gCAAgC,KAAO,+BAA+B,YAAc,uCAAuC,QAAU,oC,uBCAxoBD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,YAAc,oC,kCCDnF,yOAUaC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC9B,kBAAC,OAAD,CAAMC,GAAID,EAAKE,OAAOC,KAAMC,UAAWC,IAAeC,eACpD,kBAAC,IAAD,CACEF,UAAWC,IAAeE,mBAC1BC,MAAOR,EAAKS,YAAYC,MAAMC,gBAAgBH,QAEhD,yBAAKJ,UAAWC,IAAeO,eAC7B,wBAAIR,UAAWC,IAAeQ,OAAQb,EAAKS,YAAYI,OACvD,uBAAGT,UAAWC,IAAeS,SAC1Bd,EAAKS,YAAYM,SAEpB,uBAAGX,UAAWC,IAAeW,MAA7B,KAEG,IACD,kBAAC,OAAD,CAAMf,GAAG,WACP,yCAED,KACAD,EAAKS,YAAYQ,gBAUbC,EAAuB,SAAC,GAAD,IAAGlB,EAAH,EAAGA,KAAH,OAClC,kBAAC,OAAD,CAAMC,GAAID,EAAKE,OAAOC,KAAMC,UAAWC,IAAec,mBACpD,6BACE,wBAAIf,UAAWC,IAAee,WAAYpB,EAAKS,YAAYI,OAC3D,uBAAGT,UAAWC,IAAegB,aAC1BrB,EAAKS,YAAYM,SAEpB,wBAAIX,UAAWC,IAAeW,MAA9B,KAEG,IACD,kBAAC,OAAD,CAAMf,GAAG,WACP,yCAED,KACAD,EAAKS,YAAYQ,cAGtB,kBAAC,IAAD,CACEb,UAAWC,IAAeiB,uBAC1Bd,MAAOR,EAAKS,YAAYc,UAAUZ,gBAAgBH,UAgCzCgB,UAvBE,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACOC,kBAAkBC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAK9B,QACpE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKa,MAAM,SACX,wBAAIT,UAAW2B,IAAWC,aACxB,kBAAC,OAAD,CAAM/B,GAAG,KAAT,QACC,MACD,kBAAC,OAAD,CAAMA,GAAG,KAAT,SAEF,6BACGwB,EAAYI,KAAI,SAAC7B,GAAD,OACf,kBAACD,EAAD,CAAkBC,KAAMA","file":"component---src-pages-blog-js-9b05f969b66f96b2b9fe.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkContainer\":\"blogPage-module--link-container--3Mx4x\",\"thumbnailContainer\":\"blogPage-module--thumbnail-container--31zE2\",\"textContainer\":\"blogPage-module--text-container--3SUWH\",\"heroThumbnailContainer\":\"blogPage-module--hero-thumbnail-container--1y52p\",\"heroLinkContainer\":\"blogPage-module--hero-link-container--2Raad\",\"heroTitle\":\"blogPage-module--heroTitle--ldbiv\",\"heroCaption\":\"blogPage-module--heroCaption--1pwGH\",\"heroTextContainer\":\"blogPage-module--hero-text-container--3PpOf\",\"title\":\"blogPage-module--title--2Kq63\",\"date\":\"blogPage-module--date--hq968\",\"readingTime\":\"blogPage-module--reading-time--3sXNq\",\"caption\":\"blogPage-module--caption--e7oRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentTitle\":\"page-module--content-title--LZB2E\",\"breadcrumbs\":\"page-module--breadcrumbs--1Tihu\"};","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { PropTypes } from 'prop-types';\nimport Img from 'gatsby-image';\nimport SEO from '../components/seo';\nimport blogPageStyles from './blogPage.module.css';\nimport pageStyles from './page.module.css';\n\nimport Layout from '../components/layout';\n\nexport const BlogThumbnailRow = ({ node }) => (\n  <Link to={node.fields.slug} className={blogPageStyles.linkContainer}>\n    <Img\n      className={blogPageStyles.thumbnailContainer}\n      fixed={node.frontmatter.image.childImageSharp.fixed}\n    />\n    <div className={blogPageStyles.textContainer}>\n      <h1 className={blogPageStyles.title}>{node.frontmatter.title}</h1>\n      <p className={blogPageStyles.caption}>\n        {node.frontmatter.tagline}\n      </p>\n      <p className={blogPageStyles.date}>\n        by\n        {' '}\n        <Link to=\"/about/\">\n          <strong>Beau</strong>\n        </Link>\n        {', '}\n        {node.frontmatter.publishDate}\n      </p>\n    </div>\n  </Link>\n);\n\nBlogThumbnailRow.propTypes = {\n  node: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport const HeroBlogThumbnailRow = ({ node }) => (\n  <Link to={node.fields.slug} className={blogPageStyles.heroLinkContainer}>\n    <div>\n      <h1 className={blogPageStyles.heroTitle}>{node.frontmatter.title}</h1>\n      <p className={blogPageStyles.heroCaption}>\n        {node.frontmatter.tagline}\n      </p>\n      <h6 className={blogPageStyles.date}>\n        by\n        {' '}\n        <Link to=\"/about/\">\n          <strong>Beau</strong>\n        </Link>\n        {', '}\n        {node.frontmatter.publishDate}\n      </h6>\n    </div>\n    <Img\n      className={blogPageStyles.heroThumbnailContainer}\n      fixed={node.frontmatter.heroImage.childImageSharp.fixed}\n    />\n  </Link>\n);\n\nHeroBlogThumbnailRow.propTypes = {\n  node: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nconst BlogPage = ({ data }) => {\n  const first3Nodes = data.allMarkdownRemark.edges.map((edge) => edge.node);\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <h6 className={pageStyles.breadcrumbs}>\n        <Link to=\"/\">Home</Link>\n        {' / '}\n        <Link to=\"/\">Blog</Link>\n      </h6>\n      <div>\n        {first3Nodes.map((node) => (\n          <BlogThumbnailRow node={node} />\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nBlogPage.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport default BlogPage;\n\nexport const query = graphql`\n  query {\n    placeholderImage: file(relativePath: { eq: \"images/shop.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 300) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 3\n      filter: { frontmatter: { type: { eq: \"blog-posts\"} } },\n      sort: { fields: [frontmatter___number], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            publishDate\n            tagline\n            readingTime\n            image {\n              childImageSharp {\n                fixed(width: 175, height: 175, quality: 90) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            heroImage: image {\n              childImageSharp {\n                fixed(width: 350, height: 350, quality: 90) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n          excerpt(format: PLAIN, pruneLength: 200)\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n `;\n"],"sourceRoot":""}